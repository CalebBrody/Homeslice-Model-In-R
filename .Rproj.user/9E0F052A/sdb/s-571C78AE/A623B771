{
    "collab_server" : "",
    "contents" : "Universe='San Francisco';\n\n#Load data from csvs\nMortgage.Rate = read.csv(\"hsh.csv\", header= FALSE)\nDefault.Rate= read.csv(\"fed_default.csv\", header= TRUE)\nDefault.Rate[,2]=Default.Rate[,2]/100;\nPrice=list();\nZipcodes=list();\nfor (i in 1:5) {\n  Price[[i]]=(data.frame(\n    read.csv(paste(sep='', \"Zip_Zhvi_\",i,\"bedroom.csv\"), header= TRUE)\n    ));\n  names(Price[[i]]) = gsub('\\\\.','-',names(Price[[i]]) );\n  Zipcodes[[i]]=which(Price[[1]]['Metro']==Universe);\n}\n\n#Get packages for calc\nlibrary(FinCal)\nx11(width=8,height=4)\n\n#Setup assumptions\nGetReturns=function(\nDown.Payment=.2,\nYears.of.Mortgage=30,\nYears.Remaining=25,\nEquity.Percentage=.5,\nInvestor.Percentage=.5,\nRefinance.Length=5,\nPurchase.Discount=.3,\nPercentage.of.Mortgage.Payment=.25,\nReclaim=.5,\nnet=TRUE){\n  \n  #We need to use data from today (when the house is sold) (Lag0) and 1 period ago (When the house was bought)\n  Lag=4*(Years.of.Mortgage-Years.Remaining+Refinance.Length);\n  Lag1=Default.Rate[0:(length(Default.Rate[,1])-Lag),1];\n  Lag0=Default.Rate[(1+Lag):length(Default.Rate[,1]),1];\n  \n  \n  #assume the house cost $1 to appr will be easier to calc\n  #We are at time of refinance so if 30 mort. was bought in w 25 years left 10 years ago we are at time 30-25+10\n  Payment=  pmt(r=(Mortgage.Rate[Lag1,2]/12),n=(Years.of.Mortgage)*12, pv=(1-Down.Payment)*1, fv=0);\n  Mortgage.val = -fv(r=Mortgage.Rate[Lag1,2]/12,n=(Years.of.Mortgage-Years.Remaining+Refinance.Length)*12,\n                    pv=(1-Down.Payment)*1, pmt=Payment);\n  \n  #How much did the equity cost?\n  Equity.cost = (1-fv(r=Mortgage.Rate[Lag1,2]/12,n=(Years.of.Mortgage-Years.Remaining)*12,\n                     pv=(1-Down.Payment)*1, pmt=Payment)) *Investor.Percentage*(1-Purchase.Discount);\n  \n  Equity=c();\n  for (Bedrooms in 1:5){\n  Equity=cbind(Equity,t(\n  Price[[Bedrooms]][paste(sep='','X',Lag0)][Zipcodes[[Bedrooms]],] /\n    Price[[Bedrooms]][paste(sep='','X',Lag1)][Zipcodes[[Bedrooms]],] ));\n  }\n  rownames(Equity)=Lag1;\n  \n  Equity.net =  Equity *(1-Default.Rate[Lag0,2])^(Lag/4)+\n    Equity *(1-(1-Default.Rate[Lag0,2])^(Lag/4))* Reclaim;\n  \n  #Use Equity.net for default\n  Gross.Return=(Equity- Mortgage.val)*Investor.Percentage/Equity.cost ;\n  if (net)\n    Gross.Return=(Equity.net- Mortgage.val)*Investor.Percentage/Equity.cost ;\n  \n  \n  Net.Return=(1+Gross.Return)^(1/Refinance.Length)-1 ;\n  \n\nreturn(Net.Return);\n}\n\nGraphReturn =function(net=FALSE){\n  boxplot(t(GetReturns(net=net)*100), main=\"Return\",  ylab=\"Return %\", xlab=\"Date\")\n}\n\nGraphTime=function(net=FALSE, Remaining=25){\n\n  y=list();\n  for (i in 4:29){\n    y[[i]]=((rowMeans(GetReturns( Refinance.Length=i,net=net, Years.Remaining=Remaining-5+i)*100 ,TRUE))  );\n  }\n  boxplot((y), main=\"Refinance Length\",  ylab=\"Avg Return %\", xlab=\"Length\")\n  \n}\n\nGraphEquity=function(net=FALSE){\n  \n  y=list();\n  for (i in 20:80){\n    y[[i]]=((rowMeans(GetReturns( Equity.Percentage =i/100,net=net)*100 ,TRUE))  );\n  }\n  boxplot((y), main=\"\",  ylab=\"Avg Return %\", xlab=\"Percent Equity\")\n  \n}\n\nGraphDiscount=function(net=FALSE, ...){\n  \n  y=list();\n  for (i in 20:80){\n    y[[i]]=((rowMeans(GetReturns( Purchase.Discount  =i/100,net=net, ...)*100 ,TRUE))  );\n  }\n  boxplot((y), main=\"\",  ylab=\"Avg Return %\", xlab=\"Purchase Discount\")\n  \n}\n\nGraphReclaim=function(net=FALSE, ...){\n  \n  y=list();\n  for (i in 20:80){\n    y[[i]]=((rowMeans(GetReturns(Reclaim  =i/100,net=net, ...)*100 ,TRUE))  );\n  }\n  boxplot((y), main=\"\",  ylab=\"Avg Return %\", xlab=\"Reclaim Rate\")\n  lines((1:100-1:100));\n  \n}\n\nGraphReclaim(TRUE)",
    "created" : 1496184069814.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3535504392",
    "id" : "A623B771",
    "lastKnownWriteTime" : 1496428533,
    "last_content_update" : 1496428533121,
    "path" : "~/Documents/homeslice/Backtest.R",
    "project_path" : "Backtest.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}